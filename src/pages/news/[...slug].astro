---
import HtmlBase from "@layouts/HtmlBase.astro";
import type { GetStaticPathsResult } from "astro";
import { CollectionEntry, getCollection } from "astro:content";
import GenericTest from "@assets/images/generic-test.png";
import { Image } from "astro:assets";

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
    const articles = (await getCollection("news")).filter(
        (a) => !a.data.draft || process.env.NODE_ENV === "development"
    );
    return articles.map((article) => ({
        params: {
            slug: article.slug,
        },
        props: {
            article,
        },
    }));
}

export interface Props {
    article: CollectionEntry<"news">;
}

const { article } = Astro.props;
const { Content } = await article.render();
---
<style is:global>
    article p:has(img) {
        @apply w-[calc(100%+1rem)] items-center flex flex-col -mx-2 sm:(gap-2 w-full mx-0);
    }
    article img {
        @apply w-full sm:rounded-xl max-w-2xl ;
    }
    article h1 {
        @apply text-4xl font-bold mt-6 mb-4;
    }
    article h2 {
        @apply text-3xl font-bold mt-5 mb-3;
    }
    article h3 {
        @apply text-2xl font-bold mt-4 mb-2;
    }
    article h4 {
        @apply text-xl font-bold mt-3 mb-1;
    }
    article h5 {
        @apply text-lg font-bold mt-2;
    }
    article h6 {
        @apply text-base font-bold mt-1;
    }
    article {
        font-size: 100%/1.65
    }
    article p {
        @apply mb-4;
    }
</style>
<HtmlBase title={article.data.title}>
    <main class="flex flex-col items-center w-full sm:p-2">
        <div class="mb-4">
            <Image
                src={article.data.image ?? GenericTest}
                alt={article.data.title}
                class="sm:rounded-xl w-full max-w-5xl"
            />
            <h1 class="px-2 sm:px-0 font-medium text-3xl">{article.data.title}</h1>
        </div>
        <article class="w-full max-w-3xl flex px-2">
            <Content />
        </article>
    </main>
</HtmlBase>
